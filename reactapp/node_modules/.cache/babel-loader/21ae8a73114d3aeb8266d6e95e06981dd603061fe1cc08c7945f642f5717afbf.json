{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import{Helmet}from'react-helmet';import InfoAccount from'../components/info-account';import'./account.css';import NavBar from'../components/nav-bar';import EditForm from'../components/edit-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Account=props=>{const[userData,setUserData]=useState(null);const history=useHistory();const[editMode,setEditMode]=useState(false);const toggleEditMode=()=>{setEditMode(!editMode);};useEffect(()=>{const user=localStorage.getItem('user');console.log('User data from localStorage:',user);// Log the raw user data from localStorage\nif(user){const parsedUser=JSON.parse(user);setUserData(parsedUser);console.log('User data:',parsedUser);// Debugging statement\n}else{// If there's no user data in localStorage, redirect to the login page\nhistory.push('/log-in');}},[history]);// Function to handle user logout\nconst handleLogout=()=>{// Clear user data from localStorage and state\nlocalStorage.removeItem('user');setUserData(null);// Redirect to login page or home page\nprops.history.push('/log-in');};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"Account - Clear Mind\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"Account - Clear Mind\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-hero\",children:[/*#__PURE__*/_jsx(NavBar,{rootClassName:\"nav-bar-root-class-name\"}),/*#__PURE__*/_jsx(\"div\",{className:\"account-hero1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-container1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"log-in-hero-heading heading1\",children:/*#__PURE__*/_jsx(Link,{to:\"/home\",className:\"log-in-hero-heading-link\",children:\"Clear Mind\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"account-container2\",children:editMode?/*#__PURE__*/_jsx(EditForm,{userData:userData,setEditMode:setEditMode}):userData?/*#__PURE__*/ // Check if userData is not null\n_jsxs(\"div\",{className:\"info-account-container info-account-root-class-name\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-account-text-name\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-account-text-name1\",children:userData.username}),/*#__PURE__*/_jsx(\"span\",{className:\"info-account-text-email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"info-account-text-email1\",children:userData.email})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading user data...\"})// Display a loading message or spinner\n}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"account-log-out-button button\",onClick:handleLogout,children:\"Log Out\"}),/*#__PURE__*/_jsx(\"button\",{className:\"account-edit-button button\",onClick:toggleEditMode,children:\"Edit\\u2192\"})]})]})})]})]});};export default Account;","map":{"version":3,"names":["React","useState","useEffect","useHistory","Link","Helmet","InfoAccount","NavBar","EditForm","jsx","_jsx","jsxs","_jsxs","Account","props","userData","setUserData","history","editMode","setEditMode","toggleEditMode","user","localStorage","getItem","console","log","parsedUser","JSON","parse","push","handleLogout","removeItem","className","children","property","content","rootClassName","to","username","email","onClick"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/views/account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, Link  } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\n\nimport InfoAccount from '../components/info-account'\nimport './account.css'\nimport NavBar from '../components/nav-bar'\nimport EditForm from '../components/edit-form'\n\nconst Account = (props) => {\n  const [userData, setUserData] = useState(null);\n  const history = useHistory(); \n  const [editMode, setEditMode] = useState(false);\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    console.log('User data from localStorage:', user); // Log the raw user data from localStorage\n\n    if (user) {\n      const parsedUser = JSON.parse(user);\n      setUserData(parsedUser);\n      console.log('User data:', parsedUser); // Debugging statement\n    } else {\n      // If there's no user data in localStorage, redirect to the login page\n      history.push('/log-in');\n    }\n  }, [history]);\n  \n\n  // Function to handle user logout\n  const handleLogout = () => {\n    // Clear user data from localStorage and state\n    localStorage.removeItem('user');\n    setUserData(null);\n    // Redirect to login page or home page\n    props.history.push('/log-in');\n  };\n\n  return (\n    <div className=\"account-container\">\n      <Helmet>\n        <title>Account - Clear Mind</title>\n        <meta property=\"og:title\" content=\"Account - Clear Mind\" />\n      </Helmet>\n      <div className=\"account-hero\">\n        <NavBar rootClassName=\"nav-bar-root-class-name\"></NavBar>\n        <div className=\"account-hero1\">\n          <div className=\"account-container1\">\n            <h1 className=\"log-in-hero-heading heading1\">\n              <Link to='/home' className=\"log-in-hero-heading-link\">\n                Clear Mind\n              </Link>\n            </h1>\n            <div className=\"account-container2\">\n            {editMode ? (\n              <EditForm userData={userData} setEditMode={setEditMode} />\n            ) : (\n              userData ? ( // Check if userData is not null\n                <div className='info-account-container info-account-root-class-name'>\n                  <span className=\"info-account-text-name\">Username:</span>\n                  <span className=\"info-account-text-name1\">{userData.username}</span>\n                  <span className=\"info-account-text-email\">Email:</span>\n                  <span className=\"info-account-text-email1\">{userData.email}</span>\n      \n                </div>\n              ) : (\n                \n                <p>Loading user data...</p> // Display a loading message or spinner\n              )\n              )}\n            </div>\n            <div className=\"account-btn-group\">\n              <button className=\"account-log-out-button button\" onClick={handleLogout}>Log Out</button>\n              <button className=\"account-edit-button button\" onClick={toggleEditMode}>Editâ†’</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Account\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}