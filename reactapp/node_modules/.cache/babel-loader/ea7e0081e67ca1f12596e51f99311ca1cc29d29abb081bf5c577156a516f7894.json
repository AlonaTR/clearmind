{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import{Helmet}from'react-helmet';import axios from'axios';import ActivityTable from'../components/activity-table';import'./activity.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Activity=props=>{const[activityData,setActivityData]=useState([]);useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get('/api/your-endpoint');// Replace with your actual endpoint\nconsole.log('Response data:',response.data);const processedData=processActivityData(response.data);setActivityData(processedData);}catch(error){console.error('Error fetching activity data:',error);}};fetchData();},[]);const processActivityData=data=>{// Create an object to hold the processed data\nconst processedData={};// Iterate over each data item\ndata.forEach(item=>{// Extract the year and month from the date\nconst date=new Date(item.date);const year=date.getFullYear();const month=date.toLocaleString('default',{month:'short'});// Initialize the year object if it doesn't exist\nif(!processedData[year]){processedData[year]={year,months:Array(12).fill(0),// Initialize an array of 12 months with 0 contributions\ncontributions:0};}// Increment the contribution count for the month\nconst monthIndex=date.getMonth();// Get the month index (0-11)\nprocessedData[year].months[monthIndex]++;processedData[year].contributions++;});// Convert the processed data object into an array\nreturn Object.values(processedData)||[];};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"My Activity - Clear Mind\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"Account - Clear Mind\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"account-hero\",children:/*#__PURE__*/_jsx(\"div\",{className:\"account-hero1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"account-container1\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"log-in-hero-heading heading1\",children:/*#__PURE__*/_jsx(Link,{to:\"/home\",className:\"log-in-hero-heading-link\",children:\"Clear Mind\"})})})})}),/*#__PURE__*/_jsx(ActivityTable,{data:activityData})]});};export default Activity;","map":{"version":3,"names":["React","useState","useEffect","useHistory","Link","Helmet","axios","ActivityTable","jsx","_jsx","jsxs","_jsxs","Activity","props","activityData","setActivityData","fetchData","response","get","console","log","data","processedData","processActivityData","error","forEach","item","date","Date","year","getFullYear","month","toLocaleString","months","Array","fill","contributions","monthIndex","getMonth","Object","values","className","children","property","content","to"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/views/activity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, Link  } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport axios from 'axios';\nimport ActivityTable from '../components/activity-table'\nimport './activity.css'\n\n\nconst Activity = (props) => {\n  const [activityData, setActivityData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/your-endpoint'); // Replace with your actual endpoint\n        console.log('Response data:', response.data);\n        const processedData = processActivityData(response.data);\n        setActivityData(processedData);\n      } catch (error) {\n        console.error('Error fetching activity data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const processActivityData = (data) => {\n    // Create an object to hold the processed data\n    const processedData = {};\n  \n    // Iterate over each data item\n    data.forEach((item) => {\n      // Extract the year and month from the date\n      const date = new Date(item.date);\n      const year = date.getFullYear();\n      const month = date.toLocaleString('default', { month: 'short' });\n  \n      // Initialize the year object if it doesn't exist\n      if (!processedData[year]) {\n        processedData[year] = {\n          year,\n          months: Array(12).fill(0), // Initialize an array of 12 months with 0 contributions\n          contributions: 0,\n        };\n      }\n  \n      // Increment the contribution count for the month\n      const monthIndex = date.getMonth(); // Get the month index (0-11)\n      processedData[year].months[monthIndex]++;\n      processedData[year].contributions++;\n    });\n  \n    // Convert the processed data object into an array\n    return Object.values(processedData) || [];\n  };\n\n  return (\n    <div className=\"account-container\">\n      <Helmet>\n        <title>My Activity - Clear Mind</title>\n        <meta property=\"og:title\" content=\"Account - Clear Mind\" />\n      </Helmet>\n      <div className=\"account-hero\">\n        <div className=\"account-hero1\">\n          <div className=\"account-container1\">\n            <h1 className=\"log-in-hero-heading heading1\">\n              <Link to='/home' className=\"log-in-hero-heading-link\">\n                Clear Mind\n              </Link>\n            </h1>\n          </div>\n        </div>\n      </div>\n      <ActivityTable data={activityData}/>\n    </div>\n  )\n}\n\nexport default Activity\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}