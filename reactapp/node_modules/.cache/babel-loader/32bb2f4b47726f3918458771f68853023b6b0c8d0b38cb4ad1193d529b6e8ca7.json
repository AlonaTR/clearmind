{"ast":null,"code":"import React from'react';import'./test-question.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TestQuestion=_ref=>{let{question,answers,selectedAnswer,onAnswerSelect}=_ref;// Destructure the props here\nconst handleAnswerChange=answerPoints=>{onAnswerSelect(answerPoints);};return/*#__PURE__*/_jsxs(\"div\",{className:\"test-question-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"test-question-text heading4\",children:question}),answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-question-answer-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"answer-\".concat(index),className:\"test-question-radiobutton\",onChange:()=>handleAnswerChange(answer.points),checked:selectedAnswer===answer.points// Mark the radio button as checked if the points match\n}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"answer-\".concat(index),className:\"test-question-text1\",children:answer.text})]},index))]});};export default TestQuestion;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TestQuestion","_ref","question","answers","selectedAnswer","onAnswerSelect","handleAnswerChange","answerPoints","className","children","map","answer","index","type","name","id","concat","onChange","points","checked","htmlFor","text"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/components/test-question.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './test-question.css'\n\nconst TestQuestion = ({ question, answers, selectedAnswer, onAnswerSelect }) => { // Destructure the props here\n\n  const handleAnswerChange = (answerPoints) => {\n    onAnswerSelect(answerPoints);\n  };\n\n  return (\n    <div className=\"test-question-container\">\n      <span className=\"test-question-text heading4\">{question}</span>\n      {answers.map((answer, index) => (\n        <div key={index} className=\"test-question-answer-container\">\n          <input\n            type=\"radio\"\n            name=\"radio\"\n            id={`answer-${index}`}\n            className=\"test-question-radiobutton\"\n            onChange={() => handleAnswerChange(answer.points)}\n            checked={selectedAnswer === answer.points} // Mark the radio button as checked if the points match\n          />\n          <label htmlFor={`answer-${index}`} className=\"test-question-text1\">\n            {answer.text}\n          </label>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nTestQuestion.propTypes = {\n  question: PropTypes.string.isRequired,\n  answers: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      points: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  selectedAnswer: PropTypes.number,\n  onAnswerSelect: PropTypes.func.isRequired,\n}\n\nexport default TestQuestion\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2D,IAA1D,CAAEC,QAAQ,CAAEC,OAAO,CAAEC,cAAc,CAAEC,cAAe,CAAC,CAAAJ,IAAA,CAAO;AAEhF,KAAM,CAAAK,kBAAkB,CAAIC,YAAY,EAAK,CAC3CF,cAAc,CAACE,YAAY,CAAC,CAC9B,CAAC,CAED,mBACER,KAAA,QAAKS,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCZ,IAAA,SAAMW,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAEP,QAAQ,CAAO,CAAC,CAC9DC,OAAO,CAACO,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACzBb,KAAA,QAAiBS,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eACzDZ,IAAA,UACEgB,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,OAAO,CACZC,EAAE,WAAAC,MAAA,CAAYJ,KAAK,CAAG,CACtBJ,SAAS,CAAC,2BAA2B,CACrCS,QAAQ,CAAEA,CAAA,GAAMX,kBAAkB,CAACK,MAAM,CAACO,MAAM,CAAE,CAClDC,OAAO,CAAEf,cAAc,GAAKO,MAAM,CAACO,MAAQ;AAAA,CAC5C,CAAC,cACFrB,IAAA,UAAOuB,OAAO,WAAAJ,MAAA,CAAYJ,KAAK,CAAG,CAACJ,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAC/DE,MAAM,CAACU,IAAI,CACP,CAAC,GAXAT,KAYL,CACN,CAAC,EACC,CAAC,CAEV,CAAC,CAcD,cAAe,CAAAZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}