{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import{Helmet}from'react-helmet';import axios from'axios';import'./activity.css';import ActivityCalendar from'react-activity-calendar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Activity=props=>{const[activityData,setActivityData]=useState([]);const[selectedYear,setSelectedYear]=useState(new Date().getFullYear());const data=[{date:'2024-01-01',count:1},{date:'2024-01-03',count:4},{date:'2024-01-06',count:2},{date:'2024-12-31',count:0}// ...and so on\n];useEffect(()=>{let isMounted=true;// Add this flag\nconst fetchData=async()=>{try{const response=await axios.get('/api/user-activity');console.log('Response data:',response.data);if(isMounted){// Check if the component is still mounted\nconst processedData=processActivityData(response.data);setActivityData(processedData);}}catch(error){console.error('Error fetching activity data:',error);}};fetchData();return()=>{isMounted=false;// Set the flag to false when the component unmounts\n};},[]);const processActivityData=data=>{// Create an object to hold the processed data\nconst processedData={};// Iterate over each data item\ndata.forEach(item=>{// Extract the year and month from the date\nconst date=new Date(item.date);const year=date.getFullYear();const month=date.toLocaleString('default',{month:'short'});// Initialize the year object if it doesn't exist\nif(!processedData[year]){processedData[year]={year,months:Array(12).fill(0),// Initialize an array of 12 months with 0 contributions\ncontributions:0};}// Increment the contribution count for the month\nconst monthIndex=date.getMonth();// Get the month index (0-11)\nprocessedData[year].months[monthIndex]++;processedData[year].contributions++;});// Convert the processed data object into an array\nreturn Object.values(processedData)||[];};const onDatePicked=date=>{alert(date);};return/*#__PURE__*/_jsxs(\"div\",{className:\"account-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"My Activity - Clear Mind\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"Account - Clear Mind\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"account-hero\",children:/*#__PURE__*/_jsx(\"div\",{className:\"account-hero1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"account-container1\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"log-in-hero-heading heading1\",children:/*#__PURE__*/_jsx(Link,{to:\"/home\",className:\"log-in-hero-heading-link\",children:\"Clear Mind\"})})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"calendar\",children:/*#__PURE__*/_jsx(ActivityCalendar,{data:data,showWeekdayLabels:true,loading:true})})]});};export default Activity;","map":{"version":3,"names":["React","useState","useEffect","useHistory","Link","Helmet","axios","ActivityCalendar","jsx","_jsx","jsxs","_jsxs","Activity","props","activityData","setActivityData","selectedYear","setSelectedYear","Date","getFullYear","data","date","count","isMounted","fetchData","response","get","console","log","processedData","processActivityData","error","forEach","item","year","month","toLocaleString","months","Array","fill","contributions","monthIndex","getMonth","Object","values","onDatePicked","alert","className","children","property","content","to","showWeekdayLabels","loading"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/views/activity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, Link  } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport axios from 'axios';\nimport './activity.css'\nimport ActivityCalendar from 'react-activity-calendar'\n\n\nconst Activity = (props) => {\n  const [activityData, setActivityData] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n\n  const data = [\n    { date: '2024-01-01', count: 1 },\n    { date: '2024-01-03', count: 4 },\n    { date: '2024-01-06', count: 2 },\n    { date: '2024-12-31', count: 0 },\n    // ...and so on\n  ];\n\n \n\n  useEffect(() => {\n    let isMounted = true; // Add this flag\n  \n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/user-activity'); \n        console.log('Response data:', response.data);\n        if (isMounted) { // Check if the component is still mounted\n          const processedData = processActivityData(response.data);\n          setActivityData(processedData);\n        }\n      } catch (error) {\n        console.error('Error fetching activity data:', error);\n      }\n    };\n  \n    fetchData();\n  \n    return () => {\n      isMounted = false; // Set the flag to false when the component unmounts\n    };\n  }, []);\n\n  const processActivityData = (data) => {\n    // Create an object to hold the processed data\n    const processedData = {};\n  \n    // Iterate over each data item\n    data.forEach((item) => {\n      // Extract the year and month from the date\n      const date = new Date(item.date);\n      const year = date.getFullYear();\n      const month = date.toLocaleString('default', { month: 'short' });\n  \n      // Initialize the year object if it doesn't exist\n      if (!processedData[year]) {\n        processedData[year] = {\n          year,\n          months: Array(12).fill(0), // Initialize an array of 12 months with 0 contributions\n          contributions: 0,\n        };\n      }\n  \n      // Increment the contribution count for the month\n      const monthIndex = date.getMonth(); // Get the month index (0-11)\n      processedData[year].months[monthIndex]++;\n      processedData[year].contributions++;\n    });\n  \n    // Convert the processed data object into an array\n    return Object.values(processedData) || [];\n  };\n\n  const onDatePicked = (date) => {\n    alert(date);\n  };\n\n  return (\n    <div className=\"account-container\">\n      <Helmet>\n        <title>My Activity - Clear Mind</title>\n        <meta property=\"og:title\" content=\"Account - Clear Mind\" />\n      </Helmet>\n      <div className=\"account-hero\">\n        <div className=\"account-hero1\">\n          <div className=\"account-container1\">\n            <h1 className=\"log-in-hero-heading heading1\">\n              <Link to='/home' className=\"log-in-hero-heading-link\">\n                Clear Mind\n              </Link>\n            </h1>\n          </div>\n        </div>\n      </div>\n      <div className=\"calendar\">\n        <ActivityCalendar \n          data={data} \n          showWeekdayLabels = {true}\n          loading = {true}\n          \n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Activity\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}