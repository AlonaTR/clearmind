{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useHistory,Link}from'react-router-dom';import{Helmet}from'react-helmet';import InfoAccount from'../components/info-account';import RegisterForm from'../components/register-form';import LogInForm from'../components/log-in-form';import'./log-in.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LogIn=props=>{const history=useHistory();const handleHome=()=>{history.push('/home');};const[isLoggedIn,setIsLoggedIn]=useState(false);const[userData,setUserData]=useState(null);const[showRegisterForm,setShowRegisterForm]=useState(false);const[loginError,setLoginError]=useState('');// Add state to handle form inputs and errors\nconst[registerInfo,setRegisterInfo]=useState({username:'',password1:'',password2:'',email:''});const[registerError,setRegisterError]=useState('');// Handle form input changes\nconst handleInputChange=e=>{setRegisterInfo({...registerInfo,[e.target.name]:e.target.value});};useEffect(()=>{// Check if user is logged in\nconst user=localStorage.getItem('user');if(user){setIsLoggedIn(true);setUserData(JSON.parse(user));}},[]);const handleLogin=async userInfo=>{console.log('handleLogin called with:',userInfo);try{const response=await fetch('/api/login/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:userInfo.username,password:userInfo.password})});const data=await response.json();if(response.ok&&data.status==='success'&&data.user){localStorage.setItem('user',JSON.stringify(data.user));// Store user data in localStorage\nsetIsLoggedIn(true);setUserData(data.user);props.history.push('/account');// Redirect to account page\n}else{setLoginError('Wrong email or password');}}catch(error){console.error('Login error:',error);}};const handleRegister=async e=>{e.preventDefault();// Prevent default form submission behavior\n// Perform input validation if necessary\ntry{const response=await fetch('/api/register/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:registerInfo.username,email:registerInfo.email,password1:registerInfo.password1,password2:registerInfo.password2})});const data=await response.json();if(response.ok&&data.status==='success'){localStorage.setItem('user',JSON.stringify(data.user));// Store user data in localStorage\nsetIsLoggedIn(true);setUserData(data.user);props.history.push('/account');// Redirect to the account page\n}else{// Registration failed, handle errors\nsetRegisterError(data.errors||'Registration failed');}}catch(error){// Handle network errors or other unexpected errors\nsetRegisterError('Network error or other unexpected error');}};const handleLogout=()=>{// Clear user from local storage or manage session\nlocalStorage.removeItem('user');setIsLoggedIn(false);setUserData(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"LogIn - Clear Mind\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"LogIn - Clear Mind\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"log-in-hero\",children:/*#__PURE__*/_jsx(\"div\",{className:\"log-in-hero1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-container1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"log-in-hero-heading heading1\",children:/*#__PURE__*/_jsx(Link,{to:\"/home\",className:\"log-in-hero-heading-link\",children:\"Clear Mind\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"allitems-hero-sub-heading\",children:\"Discover the Power of Meditation\"}),/*#__PURE__*/_jsx(\"div\",{className:\"log-in-container2\",children:isLoggedIn&&userData?/*#__PURE__*/_jsx(InfoAccount// Pass the necessary props to InfoAccount component\n,{username:userData.username,email:userData.email// ...other props\n}):showRegisterForm?/*#__PURE__*/_jsx(RegisterForm,{onRegister:handleRegister,onInputChange:handleInputChange,registerError:registerError}):/*#__PURE__*/_jsx(LogInForm,{rootClassName:\"log-in-form-root-class-name\",onLogin:handleLogin,heroSubHeading2:loginError})}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-btn-group\",children:[!showRegisterForm&&/*#__PURE__*/_jsx(\"button\",{className:\"log-in-hero-button2 button\",onClick:()=>setShowRegisterForm(true),children:\"Register \\u2192\"}),showRegisterForm&&/*#__PURE__*/_jsx(\"button\",{className:\"log-in-hero-button2 button\",onClick:()=>setShowRegisterForm(false),children:\"Log In\"})]})]})})})]});};export default LogIn;","map":{"version":3,"names":["React","useState","useEffect","useHistory","Link","Helmet","InfoAccount","RegisterForm","LogInForm","jsx","_jsx","jsxs","_jsxs","LogIn","props","history","handleHome","push","isLoggedIn","setIsLoggedIn","userData","setUserData","showRegisterForm","setShowRegisterForm","loginError","setLoginError","registerInfo","setRegisterInfo","username","password1","password2","email","registerError","setRegisterError","handleInputChange","e","target","name","value","user","localStorage","getItem","JSON","parse","handleLogin","userInfo","console","log","response","fetch","method","headers","body","stringify","password","data","json","ok","status","setItem","error","handleRegister","preventDefault","errors","handleLogout","removeItem","className","children","property","content","to","onRegister","onInputChange","rootClassName","onLogin","heroSubHeading2","onClick"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/views/log-in.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, Link  } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport InfoAccount from '../components/info-account'\nimport RegisterForm from '../components/register-form'\nimport LogInForm from '../components/log-in-form'\nimport './log-in.css'\n\nconst LogIn = (props) => {\n  const history = useHistory();\n\n  const handleHome = () => {\n    history.push('/home'); \n  };\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userData, setUserData] = useState(null)\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\n  const [loginError, setLoginError] = useState('');\n\n\n   // Add state to handle form inputs and errors\n   const [registerInfo, setRegisterInfo] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n    email: '',\n  });\n  const [registerError, setRegisterError] = useState('');\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    setRegisterInfo({ ...registerInfo, [e.target.name]: e.target.value });\n  };\n\n  \n\n\n  useEffect(() => {\n    // Check if user is logged in\n    const user = localStorage.getItem('user')\n    if (user) {\n      setIsLoggedIn(true)\n      setUserData(JSON.parse(user))\n    }\n  }, [])\n\n \n  const handleLogin = async (userInfo) => {\n    console.log('handleLogin called with:', userInfo);\n    try {\n      const response = await fetch('/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: userInfo.username,\n          password: userInfo.password,\n        }),\n      });\n      const data = await response.json();\n      if (response.ok && data.status === 'success' && data.user) {\n        localStorage.setItem('user', JSON.stringify(data.user)); // Store user data in localStorage\n        setIsLoggedIn(true);\n        setUserData(data.user);\n        props.history.push('/account'); // Redirect to account page\n      } else {\n        setLoginError('Wrong email or password');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n  \n  const handleRegister = async (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    // Perform input validation if necessary\n  \n    try {\n      const response = await fetch('/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: registerInfo.username,\n          email: registerInfo.email,\n          password1: registerInfo.password1,\n          password2: registerInfo.password2,\n        }),\n      });\n  \n      const data = await response.json();\n  \n      if (response.ok && data.status === 'success') {\n        localStorage.setItem('user', JSON.stringify(data.user)); // Store user data in localStorage\n        setIsLoggedIn(true);\n        setUserData(data.user);\n        props.history.push('/account'); // Redirect to the account page\n      } else {\n        // Registration failed, handle errors\n        setRegisterError(data.errors || 'Registration failed');\n      }\n    } catch (error) {\n      // Handle network errors or other unexpected errors\n      setRegisterError('Network error or other unexpected error');\n    }\n  };\n  \n\n\n  const handleLogout = () => {\n    // Clear user from local storage or manage session\n    localStorage.removeItem('user')\n    setIsLoggedIn(false)\n    setUserData(null)\n  }\n  return (\n    <div className=\"log-in-container\">\n      <Helmet>\n        <title>LogIn - Clear Mind</title>\n        <meta property=\"og:title\" content=\"LogIn - Clear Mind\" />\n      </Helmet>\n      <div className=\"log-in-hero\">\n        <div className=\"log-in-hero1\">\n          <div className=\"log-in-container1\">\n            <h1 className=\"log-in-hero-heading heading1\">\n              <Link to='/home' className=\"log-in-hero-heading-link\">\n                Clear Mind\n              </Link>\n            </h1>\n            <span className=\"allitems-hero-sub-heading\">\n              Discover the Power of Meditation\n            </span>\n            <div className=\"log-in-container2\">\n            {isLoggedIn && userData ? (\n              <InfoAccount\n                // Pass the necessary props to InfoAccount component\n                username={userData.username}\n                email={userData.email}\n                // ...other props\n              />\n            ) : showRegisterForm ? (\n              <RegisterForm\n                onRegister={handleRegister}\n                onInputChange={handleInputChange}\n                registerError={registerError}\n              />\n            ) : (\n              <LogInForm\n                rootClassName=\"log-in-form-root-class-name\"\n                onLogin={handleLogin} \n                heroSubHeading2={loginError}\n              />\n            )}\n            </div>\n            <div className=\"log-in-btn-group\">\n              \n              {!showRegisterForm && (\n                <button\n                  className=\"log-in-hero-button2 button\"\n                  onClick={() => setShowRegisterForm(true)}>\n                  Register →\n                </button>\n              )}\n              {showRegisterForm && (\n                <button\n                  className=\"log-in-hero-button2 button\"\n                  onClick={() => setShowRegisterForm(false)}>\n                  Log In\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LogIn\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}