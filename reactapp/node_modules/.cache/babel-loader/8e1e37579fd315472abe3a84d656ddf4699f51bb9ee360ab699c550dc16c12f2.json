{"ast":null,"code":"import React from'react';import PropTypes from'prop-types';import'./test-question.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TestQuestion=props=>{const handleAnswerChange=points=>{onAnswerSelect(points);};return/*#__PURE__*/_jsxs(\"div\",{className:\"test-question-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"test-question-text heading4\",children:question}),answers.map((answer,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"test-question-answer-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"radio\",id:\"answer-\".concat(index),className:\"test-question-radiobutton\",onChange:()=>handleAnswerChange(answer.points)}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"answer-\".concat(index),className:\"test-question-text1\",children:answer.text})]},index))]});};TestQuestion.defaultProps={question:PropTypes.string.isRequired,answers:PropTypes.arrayOf(PropTypes.shape({text:PropTypes.string.isRequired,points:PropTypes.number.isRequired})).isRequired,onAnswerSelect:PropTypes.func.isRequired};export default TestQuestion;","map":{"version":3,"names":["React","PropTypes","jsx","_jsx","jsxs","_jsxs","TestQuestion","props","handleAnswerChange","points","onAnswerSelect","className","children","question","answers","map","answer","index","type","name","id","concat","onChange","htmlFor","text","defaultProps","string","isRequired","arrayOf","shape","number","func"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/components/test-question.js"],"sourcesContent":["import React from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport './test-question.css'\n\nconst TestQuestion = (props) => {\n  const handleAnswerChange = (points) => {\n    onAnswerSelect(points);\n  };\n\n  return (\n    <div className=\"test-question-container\">\n      <span className=\"test-question-text heading4\">{question}</span>\n      {answers.map((answer, index) => (\n        <div key={index} className=\"test-question-answer-container\">\n          <input\n            type=\"radio\"\n            name=\"radio\"\n            id={`answer-${index}`}\n            className=\"test-question-radiobutton\"\n            onChange={() => handleAnswerChange(answer.points)}\n          />\n          <label htmlFor={`answer-${index}`} className=\"test-question-text1\">\n            {answer.text}\n          </label>\n        </div>\n      ))}\n    </div>\n  )\n    \n}\n\nTestQuestion.defaultProps = {\n  question: PropTypes.string.isRequired,\n  answers: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      points: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n  onAnswerSelect: PropTypes.func.isRequired,\n}\n\nexport default TestQuestion\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,SAAS,KAAM,YAAY,CAElC,MAAO,qBAAqB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAAC,kBAAkB,CAAIC,MAAM,EAAK,CACrCC,cAAc,CAACD,MAAM,CAAC,CACxB,CAAC,CAED,mBACEJ,KAAA,QAAKM,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACtCT,IAAA,SAAMQ,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAEC,QAAQ,CAAO,CAAC,CAC9DC,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACzBZ,KAAA,QAAiBM,SAAS,CAAC,gCAAgC,CAAAC,QAAA,eACzDT,IAAA,UACEe,IAAI,CAAC,OAAO,CACZC,IAAI,CAAC,OAAO,CACZC,EAAE,WAAAC,MAAA,CAAYJ,KAAK,CAAG,CACtBN,SAAS,CAAC,2BAA2B,CACrCW,QAAQ,CAAEA,CAAA,GAAMd,kBAAkB,CAACQ,MAAM,CAACP,MAAM,CAAE,CACnD,CAAC,cACFN,IAAA,UAAOoB,OAAO,WAAAF,MAAA,CAAYJ,KAAK,CAAG,CAACN,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAC/DI,MAAM,CAACQ,IAAI,CACP,CAAC,GAVAP,KAWL,CACN,CAAC,EACC,CAAC,CAGV,CAAC,CAEDX,YAAY,CAACmB,YAAY,CAAG,CAC1BZ,QAAQ,CAAEZ,SAAS,CAACyB,MAAM,CAACC,UAAU,CACrCb,OAAO,CAAEb,SAAS,CAAC2B,OAAO,CACxB3B,SAAS,CAAC4B,KAAK,CAAC,CACdL,IAAI,CAAEvB,SAAS,CAACyB,MAAM,CAACC,UAAU,CACjClB,MAAM,CAAER,SAAS,CAAC6B,MAAM,CAACH,UAC3B,CAAC,CACH,CAAC,CAACA,UAAU,CACZjB,cAAc,CAAET,SAAS,CAAC8B,IAAI,CAACJ,UACjC,CAAC,CAED,cAAe,CAAArB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}