{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Helmet}from'react-helmet';import InfoAccount from'../components/info-account';import RegisterForm from'../components/register-form';import LogInForm from'../components/log-in-form';import'./log-in.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LogIn=props=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[userData,setUserData]=useState(null);const[showRegisterForm,setShowRegisterForm]=useState(false);// Add state to handle form inputs and errors\nconst[registerInfo,setRegisterInfo]=useState({username:'',password1:'',password2:'',email:''});const[registerError,setRegisterError]=useState('');// Handle form input changes\nconst handleInputChange=e=>{setRegisterInfo({...registerInfo,[e.target.name]:e.target.value});};useEffect(()=>{// Check if user is logged in\nconst user=localStorage.getItem('user');if(user){setIsLoggedIn(true);setUserData(JSON.parse(user));}},[]);const handleLogin=async userInfo=>{try{const response=await fetch('/api/login/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:userInfo.username,password:userInfo.password})});const data=await response.json();if(data.status==='success'){localStorage.setItem('user',JSON.stringify(data.user));setIsLoggedIn(true);setUserData(data.user);props.history.push('/account');// Redirect to account page\n}else{// Handle login error (e.g., display a message to the user)\n}}catch(error){// Handle network error\n}};// log-in.js\nconst handleRegister=async e=>{e.preventDefault();// Prevent default form submission behavior\n// Perform input validation if necessary\ntry{const response=await fetch('/api/register/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(registerInfo)// Assuming registerInfo contains the user registration data\n});const data=await response.json();if(response.ok&&data.status==='success'){// User was successfully registered\n// You can now set any relevant state or perform any actions required after successful registration\n// For example, you could log the user in automatically and redirect them to their account page\nsetIsLoggedIn(true);setUserData(data.user);localStorage.setItem('user',JSON.stringify(data.user));props.history.push('/account');// Redirect to the account page\n}else{// Registration failed, handle errors\nsetRegisterError(data.errors||'Registration failed');}}catch(error){// Handle network errors or other unexpected errors\nsetRegisterError('Network error or other unexpected error');}};const handleLogout=()=>{// Clear user from local storage or manage session\nlocalStorage.removeItem('user');setIsLoggedIn(false);setUserData(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-container\",children:[/*#__PURE__*/_jsxs(Helmet,{children:[/*#__PURE__*/_jsx(\"title\",{children:\"LogIn - Clear Mind\"}),/*#__PURE__*/_jsx(\"meta\",{property:\"og:title\",content:\"LogIn - Clear Mind\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"log-in-hero\",children:/*#__PURE__*/_jsx(\"div\",{className:\"log-in-hero1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-container1\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"log-in-hero-heading heading1\",children:\"Clear Mind\"}),/*#__PURE__*/_jsx(\"div\",{className:\"log-in-container2\",children:isLoggedIn?/*#__PURE__*/_jsx(InfoAccount// Pass the necessary props to InfoAccount component\n,{heroSubHeading:userData.email,heroSubHeading3:userData.surname,heroSubHeading31:userData.name// ...other props\n}):showRegisterForm?/*#__PURE__*/_jsx(RegisterForm,{onRegister:handleRegister,onInputChange:handleInputChange,registerError:registerError}):/*#__PURE__*/_jsx(LogInForm,{rootClassName:\"log-in-form-root-class-name\",onLogin:handleLogin})}),/*#__PURE__*/_jsxs(\"div\",{className:\"log-in-btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"log-in-home-button button\",onClick:()=>setShowRegisterForm(false),children:\"Log In\"}),/*#__PURE__*/_jsx(\"button\",{className:\"log-in-hero-button2 button\",onClick:()=>setShowRegisterForm(true),children:\"Register \\u2192\"})]})]})})})]});};export default LogIn;","map":{"version":3,"names":["React","useState","useEffect","Helmet","InfoAccount","RegisterForm","LogInForm","jsx","_jsx","jsxs","_jsxs","LogIn","props","isLoggedIn","setIsLoggedIn","userData","setUserData","showRegisterForm","setShowRegisterForm","registerInfo","setRegisterInfo","username","password1","password2","email","registerError","setRegisterError","handleInputChange","e","target","name","value","user","localStorage","getItem","JSON","parse","handleLogin","userInfo","response","fetch","method","headers","body","stringify","password","data","json","status","setItem","history","push","error","handleRegister","preventDefault","ok","errors","handleLogout","removeItem","className","children","property","content","heroSubHeading","heroSubHeading3","surname","heroSubHeading31","onRegister","onInputChange","rootClassName","onLogin","onClick"],"sources":["D:/polska/clearmind/meditation_project/reactapp/src/views/log-in.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { Helmet } from 'react-helmet'\nimport InfoAccount from '../components/info-account'\nimport RegisterForm from '../components/register-form'\nimport LogInForm from '../components/log-in-form'\nimport './log-in.css'\n\nconst LogIn = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userData, setUserData] = useState(null)\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\n\n   // Add state to handle form inputs and errors\n   const [registerInfo, setRegisterInfo] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n    email: '',\n  });\n  const [registerError, setRegisterError] = useState('');\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    setRegisterInfo({ ...registerInfo, [e.target.name]: e.target.value });\n  };\n\n  \n\n\n  useEffect(() => {\n    // Check if user is logged in\n    const user = localStorage.getItem('user')\n    if (user) {\n      setIsLoggedIn(true)\n      setUserData(JSON.parse(user))\n    }\n  }, [])\n\n \n  const handleLogin = async (userInfo) => {\n    try {\n        const response = await fetch('/api/login/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: userInfo.username,\n                password: userInfo.password,\n            }),\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n            localStorage.setItem('user', JSON.stringify(data.user));\n            setIsLoggedIn(true);\n            setUserData(data.user);\n            props.history.push('/account'); // Redirect to account page\n        } else {\n            // Handle login error (e.g., display a message to the user)\n        }\n    } catch (error) {\n        // Handle network error\n    }\n  };\n\n  // log-in.js\n  const handleRegister = async (e) => {\n    e.preventDefault(); // Prevent default form submission behavior\n    // Perform input validation if necessary\n\n    try {\n      const response = await fetch('/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(registerInfo), // Assuming registerInfo contains the user registration data\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.status === 'success') {\n        // User was successfully registered\n        // You can now set any relevant state or perform any actions required after successful registration\n        // For example, you could log the user in automatically and redirect them to their account page\n        setIsLoggedIn(true);\n        setUserData(data.user);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        props.history.push('/account'); // Redirect to the account page\n      } else {\n        // Registration failed, handle errors\n        setRegisterError(data.errors || 'Registration failed');\n      }\n    } catch (error) {\n      // Handle network errors or other unexpected errors\n      setRegisterError('Network error or other unexpected error');\n    }\n  };\n\n\n  const handleLogout = () => {\n    // Clear user from local storage or manage session\n    localStorage.removeItem('user')\n    setIsLoggedIn(false)\n    setUserData(null)\n  }\n  return (\n    <div className=\"log-in-container\">\n      <Helmet>\n        <title>LogIn - Clear Mind</title>\n        <meta property=\"og:title\" content=\"LogIn - Clear Mind\" />\n      </Helmet>\n      <div className=\"log-in-hero\">\n        <div className=\"log-in-hero1\">\n          <div className=\"log-in-container1\">\n            <h1 className=\"log-in-hero-heading heading1\">Clear Mind</h1>\n            <div className=\"log-in-container2\">\n            {isLoggedIn ? (\n              <InfoAccount\n                // Pass the necessary props to InfoAccount component\n                heroSubHeading={userData.email}\n                heroSubHeading3={userData.surname}\n                heroSubHeading31={userData.name}\n                // ...other props\n              />\n            ) : showRegisterForm ? (\n              <RegisterForm\n                onRegister={handleRegister}\n                onInputChange={handleInputChange}\n                registerError={registerError}\n              />\n            ) : (\n              <LogInForm\n                rootClassName=\"log-in-form-root-class-name\"\n                onLogin={handleLogin}\n              />\n            )}\n            </div>\n            <div className=\"log-in-btn-group\">\n              <button\n                className=\"log-in-home-button button\"\n                onClick={() => setShowRegisterForm(false)}>\n                Log In\n              </button>\n              <button\n                className=\"log-in-hero-button2 button\"\n                onClick={() => setShowRegisterForm(true)}>\n                Register →\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LogIn\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}